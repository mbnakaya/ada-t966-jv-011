plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'io.cs.mbnakaya'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok:1.18.26'

    runtimeOnly 'com.h2database:h2'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.0.0'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.0.0'
    testImplementation 'org.seleniumhq.selenium:selenium-api:4.0.0'
    testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.0.0'

    testRuntimeOnly 'com.h2database:h2'
}

test {
    useJUnitPlatform()
    finalizedBy(tasks.named('jacocoTestReport'))
    finalizedBy(tasks.named('jacocoTestCoverageVerification'))
}

def exclusions = [
        'io/cs/mbnakaya/aula2/*.*'
]

tasks.named('jacocoTestReport') {
    dependsOn(tasks.named('test'))
    reports {
        html.required.set(true)
        html.outputLocation.set(file("$buildDir/reports/coverage"))
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: exclusions)
    }))
}

tasks.named('jacocoTestCoverageVerification') {
    dependsOn(tasks.named('test'))
    violationRules {
        rule {
            limit {
                minimum = 0.1
                value = 'COVEREDRATIO'
            }
        }
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: exclusions)
    }))
}